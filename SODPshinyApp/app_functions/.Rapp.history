# ----- load libraries -----#
library(shiny)#
library(tidyverse)#
library(here)#
#
# usecairo = T from package Cairo for better quality of figures in shiny app#
options(shiny.usecairo=T)#
#
# ----- load data -----#
data_dir <- 'data/edit'#
data_all <- read_csv(here(data_dir, "results-for-idrc-surveyin-2021-03-05-0807_edit_allLanguages.csv"))#
data_key <- read_csv(here(data_dir, "results-for-idrc-surveyin-2020-11-06-1612-key.en_edit.csv"))#
IAD_framework_key <- read_csv(here(data_dir, "IADframeworkKey.csv"))#
#
# ----- data omissions -----#
data_all <- data_all %>% drop_na(Q5) %>%#
    filter(! Q5 == "9") %>%#
    drop_na(Q8) %>%#
    filter(! Q8 == "2")#
#
# ----- data omissions -----: exclude multiple choice grid questions for now, as we don't yet have a function to plot these#
data_key <- data_key %>% filter( ! ques_type == "multiple choice grid")#
#
# ----- rename question numbers for demographic options -----#
# data_all (answers): rename demographic questions (Q1-Q8) to text for shiny choice options#
data_all <- rename(data_all, Age = Q1, #
                   Gender = Q2,#
                   Highest_degree = Q3,#
                   Discipline_highest_degree = Q4,#
                   Country = Q5,#
                   Institution = Q6,#
                   Position = Q7,#
                   Research_project_involvement = Q8#
)#
#
# data_key (question key): rename demographic questions (Q1-Q8) to text for shiny choice options#
data_key$demographicCategory <- case_when(data_key$ques_level1 == "Q1" ~ "Age",#
                                          data_key$ques_level1 == "Q2" ~ "Gender",#
                                          data_key$ques_level1 == "Q3" ~ "Highest_degree",#
                                          data_key$ques_level1 == "Q4" ~ "Discipline_highest_degree",#
                                          data_key$ques_level1 == "Q5" ~ "Country",#
                                          data_key$ques_level1 == "Q6" ~ "Institution",#
                                          data_key$ques_level1 == "Q7" ~ "Position",#
                                          data_key$ques_level1 == "Q8" ~ "Research_project_involvement"#
)#
#
# ----- choices for demographic barplot -----#
demographicOptions <- c("Age", "Gender", "Highest_degree", "Discipline_highest_degree", "Country", "Institution", "Position", "Research_project_involvement")#
#
# ----- create lookupTable for question dropdown menu for visualisations panel -----#
lookUp <- data_key %>% select(ques_level1, question, ques_type)#
lookupTable <- unique(lookUp)#
lookupTable <-  slice(lookupTable, -(1:8)) # exclude the demographics questions#
#
# ----- question choices, and question type, for 3rd panel visualisations -----#
visualisationQuestions <- lookupTable$question
plotCheckbox2var <- function(question_name, demographic) {
plotCheckbox2var <- function(question_name, demographic) {#
   # Extract the Question answers and key from data_all and data_key and draw a plot.#
   # Question Answers#
   # =================#
   # get the question answers: select all of ques level 2 nos for the ques level 1 identified in question_name#
   question_numbers_level2 <- data_key %>% filter(ques_level1 == question_name)#
   question_numbers_level2 <- question_numbers_level2$ques_level2#
   answers_ch <- data_all %>% select(URN, question_numbers_level2)#
   # get the question key for the checklist#
   question_key_ch <- data_key %>% filter(ques_level1 == question_name) %>%#
      select("ques_level2", "question", "choice_options_text")#
   # rename the columns of the data according to the options text from the key#
   colnames(answers_ch) <- c("URN", question_key_ch$choice_options_text)#
   # Demographics (or any other multi choice single option question)#
   # =================   #
   # select for the demographics data#
   answers_demographic <- data_all %>% select(URN, demographic)#
   ## get question key for the demographic and left join onto the answers_demographic#
   # question key for the demographic#
   question_key_demographic <- data_key %>% filter(ques_level1 == demographic) %>%#
      select("choice_options_text", "choice_options_no")#
   # Join the demographic answers with the question_keys#
   by_condition <- "choice_options_no" # The column to match in the question_key#
   names(by_condition) <- demographic#
   qdata_to_plot <- left_join(answers_demographic, question_key_demographic, by = by_condition)#
   # join the var1 and var2 data sets using URN numbers#
   data_total <- left_join(qdata_to_plot, answers_ch, by = "URN")#
   # plot count data and the fill is the choice_options_text#
   df_plot <- data_total[, -c(1:2)]#
   df_plot <- df_plot %>% pivot_longer(#
      cols = !choice_options_text,#
      names_to = "option",#
      values_to = "counts")#
   # plot with ggplot#
   ## counts#
   ggplot(df_plot, aes(x=counts, y=option, fill=choice_options_text)) +#
      geom_bar(stat = "identity") +#
      labs(title = " ", x = "Count ", y = "", fill = " ")#
   ## to show percent stacked barplot#
   #    geom_bar(position="fill", stat = "identity", width=0.7) + #
   #    labs(title = " ", x = " ", y = " ", fill = " ") #+#
   #coord_flip()#
}
plotCheckbox2var("Q60", "Q1")
